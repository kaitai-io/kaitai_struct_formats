meta:
  id: outlook_nk2
  title: Outlook Nickfile
  application:
    - Outlook
    - NK2Edit # Shareware, free for personal use, can be used to create the samples without using Outlook
  file-extension: nk2
  license: MIT
  xref:
    forensicswiki: Nickfile_(NK2)
    justsolve: Nickfile
  encoding: UTF-16le
  endian: le
  bit-endian: le
  imports:
    - ./mapi_tags  # should be generated by https://github.com/KOLANICH-tools/MAPITagsScraper.py , which is by now unstable, don't use

doc: |
  A file storing Outlook contacts.

doc-ref: https://portalvhds6gyn3khqwmgzd.blob.core.windows.net/files/NK2/NK2WithBinaryExample.pdf  # also contains an etalon file in hex with description of its correct parsing

seq:
  - id: signature
    type: u4
    valid: 0xbaadf00d
  - id: unkn1
    type: u4
    #valid: 0xa0
  - id: unkn2
    type: u4
    #valid: 0xa1
  - id: contact_count
    type: u4
  - id: contacts
    type: contact
    repeat: expr
    repeat-expr: contact_count
types:
  contact:
    seq:
      - id: value_count
        type: u4
      - id: values
        type: value
        repeat: expr
        repeat-expr: value_count
    types:
      type_descriptor:
        seq:
          - id: type
            type: b12
            enum: data_type
          - id: multi_value
            type: b1
          - id: multi_instance
            type: b1
          - id: reserved
            type: b2

      var_l_value:
        params:
          - id: size
            type: u4

      value_header:
        seq:
          - id: type_descriptor
            type: type_descriptor
            -orig-id: PropTag
          - id: tag
            type: u2
            -orig-id: PropTag
            enum: mapi_tags::tag
          - id: value_type
            type: u4

      placeholder: {}

      prop8:
        -webide-representation: '{value}'
        params:
          - id: type
            type: u2
            enum: data_type
        seq:
          - id: placeholder  # fuck, it is a bug in KS that primitive types don't occupy 8 bytes when explicitly stated to do so
            size: 8
            type: placeholder
        instances:
          value:
            io: placeholder._io
            pos: 0
            type:
              switch-on: type
              cases:
                data_type::s2: s2
                data_type::s4: s4
                data_type::f4: f4
                data_type::f8: f8
                data_type::currency: u8
                data_type::application_time: u8
                data_type::error_code: u4
                data_type::boolean: u2
                data_type::s8: s8
                data_type::file_time: u8
                data_type::server_id: u4

      value:
        seq:
          - id: value_header
            type: value_header
          - id: array
            type:
              switch-on: value_header.type_descriptor.type
              cases:
                data_type::unspecified: prop8(value_header.type_descriptor.type)
                data_type::null: prop8(value_header.type_descriptor.type)
                data_type::s2: prop8(value_header.type_descriptor.type)
                data_type::s4: prop8(value_header.type_descriptor.type)
                data_type::f4: prop8(value_header.type_descriptor.type)
                data_type::f8: prop8(value_header.type_descriptor.type)
                data_type::currency: prop8(value_header.type_descriptor.type)
                data_type::application_time: prop8(value_header.type_descriptor.type)
                data_type::error_code: prop8(value_header.type_descriptor.type)
                data_type::boolean: prop8(value_header.type_descriptor.type)
                data_type::s8: prop8(value_header.type_descriptor.type)
                data_type::file_time: prop8(value_header.type_descriptor.type)
                data_type::server_id: prop8(value_header.type_descriptor.type)

                data_type::ascii_string: var_l_attached_value(value_header.type_descriptor.type)
                data_type::unicode_string: var_l_attached_value(value_header.type_descriptor.type)
                data_type::clsid: var_l_attached_value(value_header.type_descriptor.type)
                data_type::binary_data: var_l_attached_value(value_header.type_descriptor.type)
                data_type::embedded_object: var_l_attached_value(value_header.type_descriptor.type)


      var_l_attached_value:
        params:
          - id: type
            type: u2
            enum: data_type
        seq:
          - id: value
            size: 8
            type: prop8(type)
          - id: attached_value
            type: value_data(type)
        types:
          value_data:
            params:
              - id: type
                type: u2
                enum: data_type
            seq:
              - id: size
                type: u4
              - id: data
                size: size
                type:
                  switch-on: type
                  cases:
                    data_type::ascii_string: ascii_string
                    data_type::unicode_string: str
                    #'data_type::binary_data':
                    #'data_type::embedded_object':
                    #'data_type::clsid':


            types:
              ascii_string:
                seq:
                  - id: value
                    type: strz
                    encoding: ascii

  footer:
    seq:
      - id: unkn0
        type: u4
        valid: 0
      - id: modification_date
        type: u8
  oid:
    doc-ref:
      - https://docs.microsoft.com/en-us/openspecs/exchange_server_protocols/ms-oxcmsg/0d9325d3-5bfe-4aa0-9d5d-0536b86d3e77
      - https://docs.microsoft.com/en-us/openspecs/exchange_server_protocols/ms-oxcmsg/16b13b19-e002-4a4f-9460-0d9acafbaf7e
    seq:
      - id: prefix
        contents: [0x2a, 0x86, 0x48, 0x86, 0xf7, 0x14, 0x03]
      - id: type
        type: u1
        enum: type
      - id: data
        type:
          switch-on: type
          cases:
            type::tag: tag
            type::encoding: encoding
    enums:
      type:
        0x000a: tag
        0x000b: encoding
    types:
      tag:
        seq:
          - id: tag
            type: u1
            enum: tag
          - id: payload
            type:
              switch-on: tag
              cases:
                tag::ole: ole
        enums:
          tag:
            0x0001:
              id: tnef
              doc-ref: https://interoperability.blob.core.windows.net/files/MS-OXTNEF/%5bMS-OXTNEF%5d.pdf
            0x0003: ole
            0x0004: mime
        types:
          ole:
            seq:
              - id: version
                type: u1
              - id: unkn
                type: u1
                enum: unkn
            enums:
              unkn:
                1: storage
      encoding:
        seq:
          - id: encoding
            type: u1
            enum: encoding
        enums:
          encoding:
            0x0001: mac_binary
  uid:
    doc: |
      a little-endian UUID
    seq:
      - id: value
        size: 16
  entry_id:
    -orig-id: ENTRYID
    doc-ref: https://docs.microsoft.com/en-us/office/client-developer/outlook/mapi/constructing-entry-identifiers
    seq:
      - id: flags
        type: flags
      - id: reserved
        size: 3
      - id: service_provider_identifier
        type: uid
        -orig-id: ProviderUID
        doc-ref:
          - https://github.com/stephenegriffin/mfcmapi/blob/b9f8c0371796790c5b333bcabafb8894f2591e39/core/interpret/guid.h  # MIT
          - https://github.com/rtopken/CalCheck/blob/master/CalCheck/ProcessCalendar.h  # MIT
          - https://github.com/nektra/outlook-autocomplete/blob/master/OlAutoComplete/nk2props.h
          - https://interoperability.blob.core.windows.net/files/MS-OXCDATA/%5bMS-OXCDATA%5d.pdf
          - https://interoperability.blob.core.windows.net/files/MS-OXCMAIL/%5bMS-OXCMAIL%5d.pdf
          - https://github.com/libyal/libfmapi/blob/master/documentation/MAPI%20definitions.pdf  # some additional guids are there, but it is under GFDL-1.3-or-later, so haven't added them here.
        doc: |
          These guids are also used in PidTagEntryId of MS-OXCMAIL (and other exchange protocols)
          a41f2b81-a3be-1910-9d6e-00dd010f5402 muidOOP - One Off Entry Provider
          c840a7dc-42c0-1a10-b4b9-08002b2fe182 muidEMSAB - X500 Exchange Address Book Provider
          d3ad91c0-9d51-11cf-a4a9-00aa0047faa4 WAB_GUID - Contact Address Book Wrapped Entry ID
          10bba138-e505-1a10-a1bb-08002b2a56c2 muidStoreWrap - MAPI Wrapped Message Store Provider
          0aaa42fe-c718-101a-e885-0b651c240000 muidContabDLL - Contact Provider
          20fa551b-66aa-cd11-9bc8-00aa002fc45a g_muidStorePrivate - Exchange Private Store Provider
          1002831c-66aa-cd11-9bc8-00aa002fc45a g_muidStorePublic - Exchange Public Store Provider
          9073441a-66aa-cd11-9bc8-00aa002fc45a pbLongTermNonPrivateGuid - Exchange Public Folder Store Provider
      - id: oid
        type: oid
    types:
      flags:
        seq:
          - id: not_reserved
            -orig-id: MAPI_NOTRESERVED
            type: b1
          - id: reserved
            type: b3
          - id: now
            -orig-id: MAPI_NOW
            type: b1
          - id: this_session
            -orig-id: MAPI_THISSESSION
            type: b1
          - id: not_recipient
            -orig-id: MAPI_NOTRECIP
            type: b1
          - id: short_term
            -orig-id: MAPI_SHORTTERM
            type: b1

  encoding_preference:
    doc-ref:
      - https://docs.microsoft.com/en-us/office/client-developer/outlook/mapi/iaddrbook-createoneoff
      - https://docs.microsoft.com/en-us/office/client-developer/outlook/mapi/pidtagsendinternetencoding-canonical-property
    seq:
      # ulFlags
      - id: reserved2
        type: b7
      - id: oop_dont_lookup
        -orig-id: OOP_DONT_LOOKUP
        type: b1
      - id: send_no_rich_info
        -orig-id: MAPI_SEND_NO_RICH_INFO
        type: b1
        doc-ref: https://docs.microsoft.com/en-us/office/client-developer/outlook/mapi/pidtagsendrichinfo-canonical-property
      - id: encoding_preference
        -orig-id: ENCODING_PREFERENCE
        type: b1
        doc: If not set the encoding is left to the messaging system.

      # PidTagSendInternetEncoding
      - id: encoding_mime
        -orig-id: ENCODING_MIME
        type: b1
        doc: Encode the message using MIME. If not set the message body is encoded in plain text and the attachments in UUENCODE.
      - id: body_encoding_html
        -orig-id: BODY_ENCODING_HTML
        type: b1
        doc: Encode the message body in HTML. Ignored unless the `encoding_mime` is set.
      - id: body_encoding_text_and_html
        -orig-id: BODY_ENCODING_TEXT_AND_HTML
        type: b1
        doc: Encode the message body in text and HTML using Multipurpose Internet Mail Extensions (MIME) multipart alternatives. Ignored unless the `encoding_mime` is set.
      - id: mac_attach_encoding_uuencode
        -orig-id: MAC_ATTACH_ENCODING_UUENCODE
        type: b1
        doc: Encode Macintosh attachments in Apple double mode. Ignored unless the `encoding_mime` is set.
      - id: mac_attach_encoding_applesingle
        -orig-id: MAC_ATTACH_ENCODING_APPLESINGLE
        type: b1
        doc: Encode Macintosh attachments in Apple single mode. Ignored unless the `encoding_mime` is set.
      - id: reserved1
        type: b1
      - id: reserved
        type: b16

enums:
  data_type:
    # doc-ref: https://interoperability.blob.core.windows.net/files/MS-OXCDATA/%5bMS-OXCDATA%5d.pdf
    0x0000:
      id: unspecified
      -orig-id: PT_UNSPECIFIED, PT_UNKNOWN
      doc: Reserved for interface use (type is not important to caller)
    0x0001:
      id: 'null'
      -orig-id: PT_NULL
    0x0002:
      id: s2
      -orig-id: PT_SHORT, PT_I2
    0x0003:
      id: s4
      -orig-id: PT_LONG, PT_I4
    0x0004:
      id: f4
      -orig-id: PT_FLOAT, PT_R4
    0x0005:
      id: f8
      -orig-id: PT_DOUBLE, PT_R8
    0x0006:
      id: currency
      -orig-id: PT_CURRENCY
    0x0007:
      id: application_time
      -orig-id: PT_APPTIME
    0x000a:
      id: error_code
      -orig-id: PT_ERROR
    0x000b:
      id: boolean
      -orig-id: PT_BOOLEAN
    0x000d:
      id: embedded_object
      -orig-id: PT_OBJECT
    0x0014:
      id: s8
      -orig-id: PT_LONGLONG, PT_I8
    0x001e:
      id: ascii_string
      -orig-id: PT_STRING8
    0x001f:
      id: unicode_string
      -orig-id: PT_UNICODE
    0x0040:
      id: file_time
      -orig-id: PT_SYSTIME
    0x0048:
      id: clsid
      -orig-id: PT_CLSID
    0x00fb:
      id: server_id
      -orig-id: PT_SVREID

    0x0102:
      id: binary_data
      -orig-id: PT_BINARY
